{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3eeb28b4-9251-4af4-adf7-70179afafeed",
   "metadata": {},
   "source": [
    "plotting with python - homework 4\n",
    "\n",
    "$U(Q_1,Q_2) = \\frac{1}{2} K_1 Q_1^2 + \\frac{1}{2} K_2 Q_2^2 + C Q_1 Q_2^2$"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b81d2dde-73c5-4ad7-88a0-78833bdffcf3",
   "metadata": {},
   "source": [
    "### in class notes\n",
    "\n",
    "split (0.5 k1 Q2^2) = U1 and (0.5 k2 Q2^2) = U2  \n",
    "U = U1 + U2 + (C Q1 Q2^2)  \n",
    "plot U(Q2 = 0), U1 and U(Q1 = 0), U2 as *plots*  \n",
    "plot Q1, Q2 as *contour*  \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "90189d3a-00c7-4cca-9ec1-ee9f7c8bc144",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from ipywidgets import interact, FloatSlider, IntSlider \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "3eed1fcc-a2b3-43cd-91b6-61d34ec10a66",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "cb58040669394922aeddc83a997f2ce9",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "interactive(children=(FloatSlider(value=1.0, description='k1', max=50.0, min=-50.0), FloatSlider(value=1.0, de…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.contour.QuadContourSet at 0x1862c646ca0>"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#retrying this to make sure i understand. if i dont get the grade thats fine i just need to know whats going on\n",
    "\n",
    "#first we define the veriables\n",
    "q1 = np.linspace(-5,5,6)\n",
    "q2 = np.linspace(-5,5,6)\n",
    "Q1, Q2 = np.meshgrid(q1, q2)\n",
    "#print(Q1, Q2)\n",
    "k1 = 1.0\n",
    "k2 = 1.0\n",
    "c = 0.0\n",
    "\n",
    "#define the functions, split apart into sections\n",
    "def U1 (Q1):\n",
    "    return 0.5 * k1 * Q1**2\n",
    "def U2 (Q2):\n",
    "    return 0.5 * k2 * Q2**2\n",
    "    \n",
    "def U (Q1, Q2):\n",
    "    return U1(Q1) + U2(Q2) + c * Q1 * Q2**2\n",
    "\n",
    "U1_y = U1(Q1)\n",
    "U2_y = U2(Q2)\n",
    "U_y = U(Q1, Q2)\n",
    "#print(U(Q1, Q2))\n",
    "\n",
    "#can i test the plot now?\n",
    "\n",
    "#print(np.transpose([Q1, U_y])) #do it work\n",
    "#print(U(1, 1, 0))\n",
    "\n",
    "plt.figure(figsize=(10,5))\n",
    "\n",
    "plt.subplot(1, 2, 1)\n",
    "q_levels = [-2, -1, 0, 1, 2, 4]\n",
    "plot1 = plt.contourf(Q1, Q2==0, U_y, levels=q_levels, cmap=\"viridis\")\n",
    "plot2 = plt.contour(Q1, Q2==q_levels, levels=6)\n",
    "plt.clabel(plot2)\n",
    "plt.xlabel(\"Q1\")\n",
    "plt.ylabel(\"Q2\")\n",
    "plt.title(\"U(Q1, Q2=0)\")\n",
    "\n",
    "plt.subplot(1, 2, 2)\n",
    "plot3 = plt.contourf(Q1, Q2, U_y, levels=50, cmap=\"viridis\")\n",
    "plt.xlabel(\"Q1\")\n",
    "plt.ylabel(\"Q2\")\n",
    "plt.title(\"U(Q1, Q2)\")\n",
    "\n",
    "\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "interact(plot3,\n",
    "         k1=FloatSlider(min=-50, max=50, step=0.1, value=1.0, description='k1'),\n",
    "         k2=FloatSlider(min=-50, max=50, step=0.1, value=1.0, description='k2'),\n",
    "         c=FloatSlider(min=-50, max=50, step=0.1, value=0.0, description='c')\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e6354943-d2fd-4fd1-aae2-09a25c11fdcb",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true
   },
   "source": [
    "### old assignment \n",
    "\n",
    "#define where the plot is\n",
    "q1 = np.linspace(-10, 10, 15)\n",
    "q2 = np.linspace(-10, 10, 15)\n",
    "Q1, Q2 = np.meshgrid(q1, q2)\n",
    "\n",
    "k1, k2, c = 1, 1, 0.5\n",
    "\n",
    "# oscillator function\n",
    "Z = (0.5 * k1 * Q1 ** 2) + (0.5 * k2 * Q2 ** 2) + (c * Q1 * Q2 ** 2)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "242a2c12-3c2e-4e63-96f8-07659d5d6051",
   "metadata": {},
   "source": [
    "plt.figure(figsize=(4,4))\n",
    "osc_contour = plt.contourf(Q1, Q2, Z, levels=15, cmap=\"Spectral\")\n",
    "plt.colorbar(osc_contour)\n",
    "plt.xlabel(\"Q1\")\n",
    "plt.ylabel(\"Q2\")\n",
    "plt.clabel(osc_contour, inline=True, fontsize=10)\n",
    "\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "20a756b4-2956-43c5-bbe9-904e09c8b619",
   "metadata": {},
   "source": [
    "def contours_osc(Q1, Q2, Z, contour_levels, title=\"$U(Q_1, Q_2)$\", xlabel=\"$Q_1$\", \n",
    "                 ylabel=\"$Q_2$\", colormap=\"Spectral\", line_color=\"black\", line_width=1, add_labels=True, \n",
    "                 grid=True, xlim=[-10, 10], ylim=[-10, 10], add_colorbar=True, figsize=(5, 6)):\n",
    "    \n",
    "    plt.figure(figsize=figsize)\n",
    "    \n",
    "    plt.subplot(1, 2, 1)\n",
    "   \n",
    "    contour_1 = plt.contourf(Q1, Q2, Z, levels=contour_levels, cmap=colormap)\n",
    "    \n",
    "    plt.title(title, fontsize=8)\n",
    "    plt.xlabel(xlabel, fontsize=12)\n",
    "    plt.ylabel(ylabel, fontsize=12)\n",
    "    plt.colorbar(contour_1)\n",
    "    plt.grid(True)\n",
    "    plt.clabel(contour_1, inline=True)\n",
    "    \n",
    "    plt.subplot(1, 2, 2)\n",
    "    contour_2 = plt.contourf(Q1, Q2, Z, levels=contour_levels, cmap=colormap)\n",
    "    \n",
    "    plt.title(title, fontsize=8)\n",
    "    plt.xlabel(xlabel, fontsize=12)\n",
    "    plt.ylabel(ylabel, fontsize=12)\n",
    "    plt.colorbar(contour_2)\n",
    "    plt.grid(True)\n",
    "    plt.clabel(contour_2, inline=True)\n",
    "    \n",
    "    interact(contour_2,\n",
    "            k1=FloatSlider(min=-5, max=5, step=0.1, value=1, description=\"k1\"),\n",
    "            k2=FloatSlider(min=-5, max=5, step=0.1, value=1, description=\"k2\"),\n",
    "            c=FloatSlider(min=-5, max=5, step=0.1, value=1, description=\"c\"),\n",
    "            contour_levels=IntSlider(min=5, max=20, step=1, value=5, description=\"levels\")\n",
    "            )\n",
    "    \n",
    "    plt.show()\n",
    "        \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0dfe6288-21ed-45d8-9afa-dc1a30d42b0b",
   "metadata": {},
   "source": [
    "contour_levels = [-3, -2, -1, 0, 1, 2, 3, 4, 5]\n",
    "contours_osc(Q1, Q2, Z, contour_levels, figsize=(10, 5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9c6f96e3-795b-4a27-a859-2bd2b3061e49",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.19"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
